// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
<<<<<<< HEAD
  provider = "prisma-client-js"
=======
    provider = "prisma-client-js"
>>>>>>> 088cd13ce05f6ef5a88edd2577d0df9cbecbf9af
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

<<<<<<< HEAD
model Customers {
  cust_id            String   @id @default(uuid())
  cust_no            Int      @default(autoincrement()) @map("customer_number")
  custFirstName      String   @map("first_name")
  custLastName       String   @map("last_name")
  custID             Int      @map("cust_ID")
  custPhoneNumber    BigInt   @map("phone_number")
  custConnectionType String   @map("connection_type")
  custStatus         String   @default("Active") @map("status")
  createdAt          DateTime @default(now())
  meters             Meters?

  billing Billing[]

  @@map("customers_tb")
}

model Meters {
  meter_id    String    @id @default(uuid())
  meterNumber Int       @unique @map("meter_number")
  createdAt   DateTime  @default(now())
  zone_id     String
  zones       Zones     @relation(fields: [zone_id], references: [zone_id])
  cust_id     String    @unique
  customer    Customers @relation(fields: [cust_id], references: [cust_id])

  water_reading Water_Reading[]
  billing       Billing[]

  @@map("meters_tb")
}

model Zones {
  zone_id  String   @id @default(uuid())
  zoneName String   @unique @map("zone_name")
  meter    Meters[]

  @@map("zone_tb")
}

model Water_Reading {
  reading_id     String   @id @default(uuid())
  currentReading Decimal  @default(0) @map("current_reading") @db.Decimal(10, 2)
  prevReading    Decimal  @default(0) @map("prev_reading") @db.Decimal(10, 2)
  consumption    Decimal  @default(0) @map("consumption") @db.Decimal(10, 2)
  createdAt      DateTime @default(now()) @map("reading date")
  meter_id       String
  meter          Meters   @relation(fields: [meter_id], references: [meter_id], onDelete: Cascade)

  @@map("water_reading_tb")
}

model Billing {
  bill_id       String   @id @default(uuid())
  billingPeriod DateTime @default(now()) @map("billing_period")
  consumption   Decimal  @map("consumption") @db.Decimal(10, 2)
  amountDue     Decimal  @default(0) @map("amount_due") @db.Decimal(10, 2)
  billingDate   DateTime @default(now())
  arrears       Int      @default(0) @map("arrears")
  waterBill     Int      @default(0) @map("water_bill")
  reconnection  Int      @default(0) @map("reconnection")
  otherCharges  Int      @default(0) @map("other_charges")

  customer Customers @relation(fields: [cust_id], references: [cust_id], onDelete: Cascade)
  cust_id  String

  meters   Meters    @relation(fields: [meter_id], references: [meter_id])
  meter_id String
  receipts Receipts?

  @@map("bills_tb")
}

model Receipts {
  receipt_id    String   @id @default(uuid())
  receiptNumber Int      @default(autoincrement()) @map("receipt_number")
  amount_paid   Decimal  @map("amount_paid") @db.Decimal(10, 2)
  deadline_date DateTime @default(now()) @map("deadline_date")
  createdAt     DateTime @default(now())

  billing Billing @relation(fields: [bill_id], references: [bill_id], onDelete: Cascade)
  bill_id String  @unique

  @@map("receipts_tb")
}

model Agents {
  agent_id   String @id @default(uuid())
  employeeID Int    @map("employee_id")
  first_name String @map("first_name")
  lastName   String @map("last_name")
  age        Int    @map("age")
  contact    Int    @map("contact")
  password   String @map("password")
  status     STATUS @default(INACTIVE) @map("status")
  role       ROLE   @default(AGENT) @map("role")

  @@map("agents_tb")
}

enum ROLE {
  ADMIN
  AGENT
}

enum STATUS {
  ACTIVE
  INACTIVE
}
=======
// prisma/schema.prisma

model Employee {
  Employees_Id Int    @id // Define Employees_Id as the primary key, but without auto-increment
  FullNames    String
  Gender       String @db.VarChar(10)
  Age          Int
  contact      String @db.VarChar(50)
  Status       String @db.VarChar(10)
  Role         String @db.VarChar(10)
  Password     String @db.VarChar(255)

  @@map("Employees_tbl") // Explicitly map to the Employees_tbl table
}


>>>>>>> 088cd13ce05f6ef5a88edd2577d0df9cbecbf9af
