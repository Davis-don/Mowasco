// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customers {
  cust_id            String   @id @default(uuid())
  custFirstName      String   @map("first_name")
  custLastName       String   @map("last_name")
  custID             Int      @map("cust_ID")
  custPhoneNumber    Int      @map("phone_number")
  custConnectionType String   @map("connection_type")
  custStatus         String   @default("Active") @map("status")
  createdAt          DateTime @default(now())
  zone_id            String   @unique
  zone               Zones    @relation(fields: [zone_id], references: [zone_id])

  meters Meters?

  billing  Billing?
  receipts Receipts?

  meter_reading Water_Reading?

  @@map("customers_tb")
}

model Meters {
  meter_id    String    @id @default(uuid())
  meterNumber Int       @unique @map("meter_number")
  createdAt   DateTime  @default(now())
  zone_id     String    @unique
  zones       Zones     @relation(fields: [zone_id], references: [zone_id])
  cust_id     String    @unique
  customer    Customers @relation(fields: [cust_id], references: [cust_id])
  billing     Billing?

  water_reading Water_Reading?
  receipts      Receipts?

  @@map("meters_tb")
}

model Zones {
  zone_id  String     @id @default(uuid())
  zoneName String        @unique @map("zone_name")
  customer Customers?
  meter    Meters?

  @@map("zone_tb")
}

model Water_Reading {
  reading_id     String   @id @default(uuid())
  currentReading Decimal  @map("current_reading") @db.Decimal(10, 2)
  prevReading    Decimal  @map("prev_reading") @db.Decimal(10, 2)
  consumption    Decimal  @map("consumption") @db.Decimal(10, 2)
  createdAt      DateTime @default(now()) @map("reading date")
  meter_id       String   @unique
  meter          Meters   @relation(fields: [meter_id], references: [meter_id], onDelete: Cascade)
  custID String @unique
  customer Customers @relation(fields: [custID], references: [cust_id])

  @@map("water_reading_tb")
}

model Billing {
  bill_id       String   @id @default(uuid())
  billingPeriod DateTime @map("billing_period")
  consumption   Decimal  @map("consumption") @db.Decimal(10, 2)
  amountDue     Decimal  @map("amount_due") @db.Decimal(10, 2)
  billingDate   DateTime @default(now())

  customer Customers @relation(fields: [cust_id], references: [cust_id], onDelete: Cascade)
  cust_id  String    @unique

  meters   Meters @relation(fields: [meter_id], references: [meter_id], onDelete: Cascade)
  meter_id String @unique

  receipts Receipts?

  @@map("bills_tb")
}

model Receipts {
  receipt_id    String   @id @default(uuid())
  receiptNumber Int      @map("receipt_number")
  amount_paid   Decimal  @map("amount_paid") @db.Decimal(10, 2)
  deadline_date DateTime @map("deadline_date")
  createdAt     DateTime @default(now())

  billing Billing @relation(fields: [bill_id], references: [bill_id], onDelete: Cascade)
  bill_id String  @unique

  meters   Meters @relation(fields: [meter_id], references: [meter_id], onDelete: Cascade)
  meter_id String @unique

  customer Customers @relation(fields: [cust_id], references: [cust_id], onDelete: Cascade)
  cust_id  String    @unique

  @@map("receipts_tb")
}
